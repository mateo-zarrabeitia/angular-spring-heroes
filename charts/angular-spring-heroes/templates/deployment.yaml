apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "angular-spring-heroes.fullname" . }}
  labels:
    deployment: {{ template "angular-spring-heroes.name" . }}
    chart: {{ template "angular-spring-heroes.chart" . }}
    app: {{ .Release.Name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  selector:
    matchLabels:
      deployment: {{ template "angular-spring-heroes.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        deployment: {{ template "angular-spring-heroes.name" . }}
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.postgresql.enabled }}
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command:
            - "sh"
            - "-c"
            - "until nc {{ .Release.Name }}-postgresql 5432 -z; do echo waiting for {{ .Release.Name }}-postgresql; sleep 2; done;"
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.postgresql.enabled }}
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://{{ .Release.Name }}-postgresql/{{ .Values.postgresql.postgresDatabase }}
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgresql-password
                  name: {{ .Release.Name }}-postgresql
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 3
          resources:
{{ toYaml .Values.resources | indent 12 }}
